# application.yml 
--- 
spring: 
  application: 
    name: ricette-seguite
  kafka:
     consumer:
        bootstrap-servers: ${DOCKER_HOST_IP:10.11.1.121}:9092
        group-id: ${spring.application.name}
        auto-offset-reset: earliest
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.apache.kafka.common.serialization.JsonDeserializer
     producer:
        bootstrap-servers: ${DOCKER_HOST_IP:10.11.1.121}:9092
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.apache.kafka.common.serialization.JsonSerializer
  cloud:
    consul:
      host: consul
      port: 8500
      discovery: 
        instanceId: ${spring.application.name}-${spring.cloud.client.hostname}-${random.value}
        healthCheckPath: /actuator/health
        healthCheckInterval: 10s
        # configurazione per effettuare esprimenti, NON USARE UN PRODUZIONE 
        # dopo quanto tempo consul deve smettere di restituire servizi che non rispondono all'health check? 
        healthCheckCriticalTimeout: 60s
        # consul deve restituire solo servizi che passano l'health check (default=false) 
        queryPassing: true 
    loadbalancer: 
      ribbon.enabled: false 

server: 
  port: ${PORT:${SERVER_PORT:0}}
#  port: 8080
